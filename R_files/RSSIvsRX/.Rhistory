RSSI_LG_2METRO_RASP1 <- read_csv("~/Documents/R_files/RSSIvsRX/data/RSSI_LG_2METRO_RASP1.csv", col_types = cols(timestamp = col_time(format = "%H:%M:%S")))
RSSI_LG_4METRO_RASP1 <- read_csv("~/Documents/R_files/RSSIvsRX/data/RSSI_LG_4METRO_RASP1.csv", col_types = cols(timestamp = col_time(format = "%H:%M:%S")))
RSSI_LG_5METRO_RASP1 <- read_csv("~/Documents/R_files/RSSIvsRX/data/RSSI_LG_5METRO_RASP1.csv", col_types = cols(timestamp = col_time(format = "%H:%M:%S")))
LG_NOTTURNO <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_NOTTURNO.csv",  col_types = cols(`1` = col_character()))
colnames(LG_NOTTURNO)[4] <- "attempt"
RSSI_LG_1METRO_RASP1$distance <- "01"
RSSI_LG_2METRO_RASP1$distance <- "02"
RSSI_LG_4METRO_RASP1$distance <- "04"
RSSI_LG_5METRO_RASP1$distance <- "05"
rssi_lg_rasp1 <- rbind(RSSI_LG_1METRO_RASP1, RSSI_LG_2METRO_RASP1, RSSI_LG_4METRO_RASP1, RSSI_LG_5METRO_RASP1)
lg_rssi_all_rasp1 <- ggplot(rssi_lg_rasp1 , aes(x=timestamp, y=rssi, color=distance))  + geom_point() +
scale_color_manual(breaks = c("1", "2", "4", "5"),values=c("green", "violet", "blue", "red")) + ggtitle("LG - RASP1 - Impronta nel tempo in base alla distanza")
lg_rssi_all_rasp1
boxplot(RSSI_LG_1METRO_RASP1$rssi, RSSI_LG_2METRO_RASP1$rssi, RSSI_LG_4METRO_RASP1$rssi, RSSI_LG_5METRO_RASP1$rssi,
xlab="Distance", ylab="RSSI", las=1, col=topo.colors(4), main="RSSI completi LG per distanza RASP 1")
min.mean.sd.max <- function(x) {
r <- c(min(x), mean(x) - sd(x), mean(x), mean(x) + sd(x), max(x))
names(r) <- c("ymin", "lower", "middle", "upper", "ymax")
r
}
plot_all_lg1_rssi <- ggplot(aes(y = rssi, x = factor(distance), color= distance), data = rssi_lg_rasp1)
plot_all_lg1_rssi <- plot_all_lg1_rssi + stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") + geom_jitter(position=position_jitter(width=.2), size=3)
plot_all_lg1_rssi <- plot_all_lg1_rssi + ggtitle("LG RASP 1: RSSI COMPLETI media, st dev +/- media") + xlab("Distanza") + ylab("RSSI") + scale_color_manual(breaks = c("1", "2", "4", "5"),values=c("darkgreen", "darkviolet", "darkblue", "darkred"))
plot_all_lg1_rssi
grid.arrange(bplot_lg1_rssi, plot_all_lg1_rssi, widths=c(0.5, 0.5), ncol=2)
lg_notturno_finger <- ggplot(LG_NOTTURNO, aes(x=timestamp, y=rssi, color=attempt))  + geom_point() +
scale_color_manual(breaks = c("1", "2", "3"),values=c("green", "violet", "blue", "red")) + ggtitle("LG - RASP1 - Distanza 3 metri - 3 misurazioni")
lg_notturno_finger
lg_notturno_line <- ggplot(LG_NOTTURNO, aes(x=timestamp, y=rssi, color=attempt))  + geom_line(data=subset(LG_NOTTURNO,attempt=="1")) +
scale_color_manual(breaks = c("1", "2", "3"),values=c("green", "violet", "blue", "red")) + ggtitle("LG - RASP1 - Distanza 3 metri - 3 misurazioni")
lg_notturno_line
box_notturno <- ggplot(aes(y = rssi, x = factor(attempt), color= attempt), data = LG_NOTTURNO)
box_notturno <- box_notturno + stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") + geom_jitter(position=position_jitter(width=.2), size=3)
box_notturno <- box_notturno + ggtitle("LG su 3 metri: media, st dev +/- media") + xlab("Distanza") + ylab("RSSI") + scale_color_manual(breaks = c("1", "2", "3"),values=c("darkgreen", "darkviolet", "darkblue", "darkred"))
box_notturno
require(ggplot2)
require(gridExtra)
require(grid)
library(readr)
SCOCCA_NO_SAMTAB <- read_csv("~/Documents/R_files/RSSIvsRX/data/SCOCCA_NO_SAMTAB.csv")
SCOCCA_NO_LG <- read_csv("~/Documents/R_files/RSSIvsRX/data/SCOCCA_NO_LG.csv")
ggplot(data = SCOCCA_NO_SAMTAB,aes(x = timestamp,y = rssi, group=scocca, colour=scocca)) + geom_point() + ggtitle("Samsung TAB - Differenze case/no case")
min.mean.sd.max <- function(x) {
r <- c(min(x), mean(x) - sd(x), mean(x), mean(x) + sd(x), max(x))
names(r) <- c("ymin", "lower", "middle", "upper", "ymax")
r
}
bplot_scocca_sam <- ggplot(aes(y = rssi, x = scocca, color= scocca), data = SCOCCA_NO_SAMTAB)
bplot_scocca_sam <- bplot_scocca_sam + stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") + geom_jitter(position=position_jitter(width=.2), size=3)
bplot_scocca_sam <- bplot_scocca_sam + ggtitle("Samsung TAB, differenze scocca") + xlab("") + ylab("RSSI") + scale_color_manual(values=c("darkgreen", "darkorange"))
bplot_scocca_sam
bplot_scocca_lg <- ggplot(aes(y = rssi, x = scocca, color= scocca), data = SCOCCA_NO_LG)
bplot_scocca_lg <- bplot_scocca_lg + stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") + geom_jitter(position=position_jitter(width=.2), size=3)
bplot_scocca_lg <- bplot_scocca_lg + ggtitle("LG, differenze scocca") + xlab("") + ylab("RSSI") + scale_color_manual(values=c("darkgreen", "darkorange"))
bplot_scocca_lg
sd(subset(SCOCCA_NO_SAMTAB$rssi, SCOCCA_NO_SAMTAB$scocca=="scocca"))
sd(subset(SCOCCA_NO_SAMTAB$rssi, SCOCCA_NO_SAMTAB$scocca=="noscocca"))
setwd("/Users/edoardesd/Documents/R_files")
getwd()
require(class)
library(readr)
require(ggplot2)
LG_FINGERPRINT_CORRIDOIO <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO.csv",  col_types = cols(`01` = col_character()))
colnames(LG_FINGERPRINT_CORRIDOIO)[3] <- "distance"
ggplot(data = LG_FINGERPRINT_CORRIDOIO,aes(x = distance,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle("LG RSSI distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO,aes(x = rssi,y = echo_time, group=distance, color=distance)) + geom_point() + ggtitle("LG + RSSI ECHO RESP TIME distanza")
min.mean.sd.max <- function(x) {
r <- c(min(x), mean(x) - sd(x), mean(x), mean(x) + sd(x), max(x))
names(r) <- c("ymin", "lower", "middle", "upper", "ymax")
r
}
normalize <- function(x){ return( (x - min(x)) / (max(x) - min(x) ))  }
bplot_lg_finger <- ggplot(aes(y = rssi, x = factor(distance), color= distance), data = LG_FINGERPRINT_CORRIDOIO)
bplot_lg_finger <- bplot_lg_finger + stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") + geom_jitter(position=position_jitter(width=.2), size=3)
bplot_lg_finger <- bplot_lg_finger + ggtitle("LG fingerprint: RSSI media, st dev +/- media") + xlab("Distanza") + ylab("RSSI")
bplot_lg_finger
gp <- runif(nrow(LG_FINGERPRINT_CORRIDOIO))
unordered_finger_set <- LG_FINGERPRINT_CORRIDOIO[order(gp),] #mischio il set
summary(unordered_finger_set)
norm_finger <- as.data.frame(lapply(unordered_finger_set[,c(1,2)], normalize))
summary(norm_finger)
finger_train_norm <- norm_finger[1:4622,]
finger_test_norm <- norm_finger[4623:4642,]
dim(finger_train_norm )
dim(finger_test_norm )
finger_train_target_norm  <- head(unordered_finger_set$distance, 4622)
length(finger_train_target_norm )
finger_correct_norm  <- tail(unordered_finger_set$distance, 20)
length(finger_correct_norm )
lg_err_norm<-numeric()
for(i in 1:60){
lg_knn_norm <- knn(finger_train_norm , finger_test_norm , finger_train_target_norm , k=i)
lg_err_norm <- c(lg_err_norm, mean(lg_knn_norm == finger_correct_norm))
}
plot(1-lg_err_norm,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for LG Normalized With Varying K")
finger_test_norm <- norm_finger[4623:4632,]
dim(finger_train_norm )
dim(finger_test_norm )
finger_train_target_norm  <- head(unordered_finger_set$distance, 4622)
length(finger_train_target_norm )
finger_correct_norm  <- tail(unordered_finger_set$distance, 10)
length(finger_correct_norm )
lg_err_norm<-numeric()
for(i in 1:60){
lg_knn_norm <- knn(finger_train_norm , finger_test_norm , finger_train_target_norm , k=i)
lg_err_norm <- c(lg_err_norm, mean(lg_knn_norm == finger_correct_norm))
}
plot(1-lg_err_norm,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for LG Normalized With Varying K")
finger_train <- unordered_finger_set[1:4622,]
finger_test <- unordered_finger_set[4623:4642,]
test_2 <- rssi_lg_rasp1[20: 40,]
dim(test_2)
test_2$timestamp= NULL
finger_train_target  <- head(unordered_finger_set$distance, 4622)
train_plot <-   geom_point(data = finger_train,aes(x = echo_time,y = rssi, group=distance, color=distance))
test_plot <- stat_sum(data = test_2,aes(x = echo_time,y = rssi, colour=distance))
g <- ggplot()
g + train_plot + test_plot
lg_err<-numeric()
for(i in 1:100){
lg_knn <- knn(finger_train , test_2, finger_train_target , k=i)
lg_err <- c(lg_err, mean(lg_knn == test_2$distance))
}
plot(1-lg_err,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for LG With Varying K")
finger_train_mono <- unordered_finger_set[1:4622, 1]
dim(finger_train_mono)
test_mono <- rssi_lg_rasp1[10: 200,4]
test_mono
dim(test_mono)
lg_err_mono<-numeric()
for(i in 1:100){
lg_knn_mono <- knn(finger_train_mono , test_mono, finger_train_target_mono , k=i)
lg_err_mono <- c(lg_err_mono, mean(lg_knn_mono == test_mono$distance))
}
plot(1-lg_err_mono,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for LG only RSSI With Varying K")
finger_train_mono <- unordered_finger_set[1:4622, 1]
dim(finger_train_mono)
test_mono <- rssi_lg_rasp1[10: 200,4]
test_mono
dim(test_mono)
lg_err_mono<-numeric()
for(i in 1:100){
lg_knn_mono <- knn(finger_train_mono , test_mono, finger_train_target_mono , k=i)
lg_err_mono <- c(lg_err_mono, mean(lg_knn_mono == test_mono$distance))
}
finger_train_target_mono  <- head(unordered_finger_set$distance, 4622)
lg_err_mono<-numeric()
for(i in 1:100){
lg_knn_mono <- knn(finger_train_mono , test_mono, finger_train_target_mono , k=i)
lg_err_mono <- c(lg_err_mono, mean(lg_knn_mono == test_mono$distance))
}
plot(1-lg_err_mono,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for LG only RSSI With Varying K")
LG_FINGERPRINT_CORRIDOIO_RX <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO_RX.csv")
TAB_FINGERPRINT_CORRIDOIO_RX <- read_csv("~/Documents/R_files/RSSIvsRX/data/TAB_FINGERPRINT_CORRIDOIO_RX.csv")
colnames(LG_FINGERPRINT_CORRIDOIO_RX)[4] <- "distance"
colnames(TAB_FINGERPRINT_CORRIDOIO_RX)[4] <- "distance"
ggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rx,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle("LG RSSI/RX distanza")
ggplot(data = TAB_FINGERPRINT_CORRIDOIO_RX,aes(x = rx,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle("LG RSSI/RX distanza")
bplot_tab_finger <- ggplot(aes(y = rssi, x = factor(distance), color= distance), data = TAB_FINGERPRINT_CORRIDOIO_RX)
bplot_tab_finger <- bplot_tab_finger + stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") + geom_jitter(position=position_jitter(width=.2), size=3)
bplot_tab_finger <- bplot_tab_finger + ggtitle("TAB fingerprint: RSSI media, st dev +/- media") + xlab("Distanza") + ylab("RSSI")
bplot_tab_finger
bplot_tab_finger_rx <- ggplot(aes(y = rx, x = factor(distance), color= distance), data = TAB_FINGERPRINT_CORRIDOIO_RX)
bplot_tab_finger_rx <- bplot_tab_finger_rx + stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") + geom_jitter(position=position_jitter(width=.2), size=3)
bplot_tab_finger_rx <- bplot_tab_finger_rx + ggtitle("TAB fingerprint: RSSI media, st dev +/- media") + xlab("Distanza") + ylab("RSSI")
bplot_tab_finger_rx
finger_train_tab <- TAB_FINGERPRINT_CORRIDOIO_RX
bplot_tab_finger
bplot_tab_finger_rx <- ggplot(aes(y = rx, x = factor(distance), color= distance), data = TAB_FINGERPRINT_CORRIDOIO_RX)
bplot_tab_finger_rx <- bplot_tab_finger_rx + stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") + geom_jitter(position=position_jitter(width=.2), size=3)
bplot_tab_finger_rx <- bplot_tab_finger_rx + ggtitle("TAB fingerprint: RSSI media, st dev +/- media") + xlab("Distanza") + ylab("RSSI")
bplot_tab_finger_rx
finger_train_tab <- TAB_FINGERPRINT_CORRIDOIO_RX
finger_test_tab <- subset(visual_sam_1, distance == "04")
finger_test_tab
dim(finger_test_tab)
dim(finger_train_tab)
finger_train_tab$timestamp=NULL
finger_test_tab$timestamp=NULL
finger_train_target_tab  <- TAB_FINGERPRINT_CORRIDOIO_RX$distance
train_plot <-   geom_point(data = finger_train_tab,aes(x = rx,y = rssi, group=distance, color=distance))
test_plot <- stat_sum(data = finger_test_tab,aes(x = rx,y = rssi, colour=distance))
g <- ggplot()
g + train_plot + test_plot
tab_err<-numeric()
for(i in 1:100){
tab_knn <- knn(finger_train_tab , finger_test_tab, finger_train_target_tab , k=i)
tab_err <- c(tab_err, mean(tab_knn == finger_test_tab$distance))
}
plot(1-tab_err,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for TAB RSSI/RX With Varying K")
finger_test_tab <- subset(visual_sam_1, distance == "02")
finger_test_tab
dim(finger_test_tab)
dim(finger_train_tab)
finger_train_tab$timestamp=NULL
finger_test_tab$timestamp=NULL
finger_train_target_tab  <- TAB_FINGERPRINT_CORRIDOIO_RX$distance
train_plot <-   geom_point(data = finger_train_tab,aes(x = rx,y = rssi, group=distance, color=distance))
test_plot <- stat_sum(data = finger_test_tab,aes(x = rx,y = rssi, colour=distance))
g <- ggplot()
g + train_plot + test_plot
tab_err<-numeric()
for(i in 1:100){
tab_knn <- knn(finger_train_tab , finger_test_tab, finger_train_target_tab , k=i)
tab_err <- c(tab_err, mean(tab_knn == finger_test_tab$distance))
}
plot(1-tab_err,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for TAB RSSI/RX With Varying K")
finger_test_tab <- subset(visual_sam_1, distance == "01")
finger_test_tab
dim(finger_test_tab)
dim(finger_train_tab)
finger_train_tab$timestamp=NULL
finger_test_tab$timestamp=NULL
finger_train_target_tab  <- TAB_FINGERPRINT_CORRIDOIO_RX$distance
train_plot <-   geom_point(data = finger_train_tab,aes(x = rx,y = rssi, group=distance, color=distance))
test_plot <- stat_sum(data = finger_test_tab,aes(x = rx,y = rssi, colour=distance))
g <- ggplot()
g + train_plot + test_plot
tab_err<-numeric()
for(i in 1:100){
tab_knn <- knn(finger_train_tab , finger_test_tab, finger_train_target_tab , k=i)
tab_err <- c(tab_err, mean(tab_knn == finger_test_tab$distance))
}
plot(1-tab_err,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for TAB RSSI/RX With Varying K")
finger_test_tab <- subset(visual_sam_1, distance == "05")
finger_test_tab
dim(finger_test_tab)
dim(finger_train_tab)
finger_train_tab$timestamp=NULL
finger_test_tab$timestamp=NULL
finger_train_target_tab  <- TAB_FINGERPRINT_CORRIDOIO_RX$distance
train_plot <-   geom_point(data = finger_train_tab,aes(x = rx,y = rssi, group=distance, color=distance))
test_plot <- stat_sum(data = finger_test_tab,aes(x = rx,y = rssi, colour=distance))
g <- ggplot()
g + train_plot + test_plot
tab_err<-numeric()
for(i in 1:100){
tab_knn <- knn(finger_train_tab , finger_test_tab, finger_train_target_tab , k=i)
tab_err <- c(tab_err, mean(tab_knn == finger_test_tab$distance))
}
plot(1-tab_err,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for TAB RSSI/RX With Varying K")
finger_test_tab <- subset(visual_sam_1, distance == "04")
finger_test_tab
dim(finger_test_tab)
dim(finger_train_tab)
finger_train_tab$timestamp=NULL
finger_test_tab$timestamp=NULL
finger_train_target_tab  <- TAB_FINGERPRINT_CORRIDOIO_RX$distance
train_plot <-   geom_point(data = finger_train_tab,aes(x = rx,y = rssi, group=distance, color=distance))
test_plot <- stat_sum(data = finger_test_tab,aes(x = rx,y = rssi, colour=distance))
g <- ggplot()
g + train_plot + test_plot
tab_err<-numeric()
for(i in 1:100){
tab_knn <- knn(finger_train_tab , finger_test_tab, finger_train_target_tab , k=i)
tab_err <- c(tab_err, mean(tab_knn == finger_test_tab$distance))
}
plot(1-tab_err,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for TAB RSSI/RX With Varying K")
finger_test_tab <- subset(visual_sam_1, distance == "02")
finger_test_tab
dim(finger_test_tab)
dim(finger_train_tab)
finger_train_tab$timestamp=NULL
finger_test_tab$timestamp=NULL
finger_train_target_tab  <- TAB_FINGERPRINT_CORRIDOIO_RX$distance
train_plot <-   geom_point(data = finger_train_tab,aes(x = rx,y = rssi, group=distance, color=distance))
test_plot <- stat_sum(data = finger_test_tab,aes(x = rx,y = rssi, colour=distance))
g <- ggplot()
g + train_plot + test_plot
tab_err<-numeric()
for(i in 1:100){
tab_knn <- knn(finger_train_tab , finger_test_tab, finger_train_target_tab , k=i)
tab_err <- c(tab_err, mean(tab_knn == finger_test_tab$distance))
}
plot(1-tab_err,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for TAB RSSI/RX With Varying K")
finger_train_mono <- unordered_finger_set[1:4622, 1]
dim(finger_train_mono)
test_mono <- rssi_lg_rasp1[10: 200,4]
test_mono
dim(test_mono)
finger_train_target_mono  <- head(unordered_finger_set$distance, 4622)
lg_err_mono<-numeric()
for(i in 1:100){
lg_knn_mono <- knn(finger_train_mono , test_mono, finger_train_target_mono , k=i)
lg_err_mono <- c(lg_err_mono, mean(lg_knn_mono == test_mono$distance))
}
plot(1-lg_err_mono,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for LG only RSSI With Varying K")
LG_FINGERPRINT_CORRIDOIO_RX <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO_RX.csv")
plot(1-lg_err_mono,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for LG only RSSI With Varying K")
finger_train_mono <- unordered_finger_set[1:4622, 1]
dim(finger_train_mono)
test_mono <- rssi_lg_rasp1[10: 200,4]
test_mono
dim(test_mono)
finger_train_target_mono  <- head(unordered_finger_set$distance, 4622)
lg_err_mono<-numeric()
for(i in 1:100){
lg_knn_mono <- knn(finger_train_mono , test_mono, finger_train_target_mono , k=i)
lg_err_mono <- c(lg_err_mono, mean(lg_knn_mono == test_mono$distance))
}
test_mono <- rssi_lg_rasp1[30: 40,4]
test_mono
dim(test_mono)
finger_train_target_mono  <- head(unordered_finger_set$distance, 4622)
lg_err_mono<-numeric()
for(i in 1:100){
lg_knn_mono <- knn(finger_train_mono , test_mono, finger_train_target_mono , k=i)
lg_err_mono <- c(lg_err_mono, mean(lg_knn_mono == test_mono$distance))
}
plot(1-lg_err_mono,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for LG only RSSI With Varying K")
LG_FINGERPRINT_CORRIDOIO_RX <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO_RX.csv")
plot(1-lg_err_mono,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for LG only RSSI With Varying K")
test_mono <- rssi_lg_rasp1[500: 540,4]
test_mono
dim(test_mono)
finger_train_target_mono  <- head(unordered_finger_set$distance, 4622)
lg_err_mono<-numeric()
for(i in 1:100){
lg_knn_mono <- knn(finger_train_mono , test_mono, finger_train_target_mono , k=i)
lg_err_mono <- c(lg_err_mono, mean(lg_knn_mono == test_mono$distance))
}
plot(1-lg_err_mono,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for LG only RSSI With Varying K")
test_mono <- rssi_lg_rasp1[1500: 1540,4]
test_mono
dim(test_mono)
finger_train_target_mono  <- head(unordered_finger_set$distance, 4622)
lg_err_mono<-numeric()
for(i in 1:100){
lg_knn_mono <- knn(finger_train_mono , test_mono, finger_train_target_mono , k=i)
lg_err_mono <- c(lg_err_mono, mean(lg_knn_mono == test_mono$distance))
}
plot(1-lg_err_mono,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for LG only RSSI With Varying K")
test_mono <- rssi_lg_rasp1[2500: 2540,4]
test_mono
dim(test_mono)
finger_train_target_mono  <- head(unordered_finger_set$distance, 4622)
lg_err_mono<-numeric()
for(i in 1:100){
lg_knn_mono <- knn(finger_train_mono , test_mono, finger_train_target_mono , k=i)
lg_err_mono <- c(lg_err_mono, mean(lg_knn_mono == test_mono$distance))
}
plot(1-lg_err_mono,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for LG only RSSI With Varying K")
test_mono <- rssi_lg_rasp1[2500: 2940,4]
test_mono
dim(test_mono)
finger_train_target_mono  <- head(unordered_finger_set$distance, 4622)
lg_err_mono<-numeric()
for(i in 1:100){
lg_knn_mono <- knn(finger_train_mono , test_mono, finger_train_target_mono , k=i)
lg_err_mono <- c(lg_err_mono, mean(lg_knn_mono == test_mono$distance))
}
plot(1-lg_err_mono,type="l",ylab="Error Rate",
xlab="K",main="Error Rate for LG only RSSI With Varying K")
LG_FINGERPRINT_CORRIDOIO_RX <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO_RX.csv")
TAB_FINGERPRINT_CORRIDOIO_RX <- read_csv("~/Documents/R_files/RSSIvsRX/data/TAB_FINGERPRINT_CORRIDOIO_RX.csv")
RSSI_LG_1METRO_RASP1 <- read_csv("~/Documents/R_files/RSSIvsRX/data/RSSI_LG_1METRO_RASP1.csv", col_types = cols(timestamp = col_time(format = "%H:%M:%S")))
RSSI_LG_2METRO_RASP1 <- read_csv("~/Documents/R_files/RSSIvsRX/data/RSSI_LG_2METRO_RASP1.csv", col_types = cols(timestamp = col_time(format = "%H:%M:%S")))
RSSI_LG_4METRO_RASP1 <- read_csv("~/Documents/R_files/RSSIvsRX/data/RSSI_LG_4METRO_RASP1.csv", col_types = cols(timestamp = col_time(format = "%H:%M:%S")))
RSSI_LG_5METRO_RASP1 <- read_csv("~/Documents/R_files/RSSIvsRX/data/RSSI_LG_5METRO_RASP1.csv", col_types = cols(timestamp = col_time(format = "%H:%M:%S")))
library(readr)
library(ggplot2)
require(ggplot2)
require(gridExtra)
RSSI_LG_1METRO_RASP1 <- read_csv("~/Documents/R_files/RSSIvsRX/data/RSSI_LG_1METRO_RASP1.csv", col_types = cols(timestamp = col_time(format = "%H:%M:%S")))
RSSI_LG_2METRO_RASP1 <- read_csv("~/Documents/R_files/RSSIvsRX/data/RSSI_LG_2METRO_RASP1.csv", col_types = cols(timestamp = col_time(format = "%H:%M:%S")))
RSSI_LG_4METRO_RASP1 <- read_csv("~/Documents/R_files/RSSIvsRX/data/RSSI_LG_4METRO_RASP1.csv", col_types = cols(timestamp = col_time(format = "%H:%M:%S")))
RSSI_LG_5METRO_RASP1 <- read_csv("~/Documents/R_files/RSSIvsRX/data/RSSI_LG_5METRO_RASP1.csv", col_types = cols(timestamp = col_time(format = "%H:%M:%S")))
LG_NOTTURNO <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_NOTTURNO.csv",  col_types = cols(`1` = col_character()))
colnames(LG_NOTTURNO)[4] <- "attempt"
RSSI_LG_1METRO_RASP1$distance <- "01"
RSSI_LG_2METRO_RASP1$distance <- "02"
RSSI_LG_4METRO_RASP1$distance <- "04"
RSSI_LG_5METRO_RASP1$distance <- "05"
rssi_lg_rasp1 <- rbind(RSSI_LG_1METRO_RASP1, RSSI_LG_2METRO_RASP1, RSSI_LG_4METRO_RASP1, RSSI_LG_5METRO_RASP1)
lg_rssi_all_rasp1 <- ggplot(rssi_lg_rasp1 , aes(x=timestamp, y=rssi, color=distance))  + geom_point() +
scale_color_manual(breaks = c("1", "2", "4", "5"),values=c("green", "violet", "blue", "red")) + ggtitle("LG - RASP1 - Impronta nel tempo in base alla distanza")
lg_rssi_all_rasp1
boxplot(RSSI_LG_1METRO_RASP1$rssi, RSSI_LG_2METRO_RASP1$rssi, RSSI_LG_4METRO_RASP1$rssi, RSSI_LG_5METRO_RASP1$rssi,
xlab="Distance", ylab="RSSI", las=1, col=topo.colors(4), main="RSSI completi LG per distanza RASP 1")
min.mean.sd.max <- function(x) {
r <- c(min(x), mean(x) - sd(x), mean(x), mean(x) + sd(x), max(x))
names(r) <- c("ymin", "lower", "middle", "upper", "ymax")
r
}
plot_all_lg1_rssi <- ggplot(aes(y = rssi, x = factor(distance), color= distance), data = rssi_lg_rasp1)
plot_all_lg1_rssi <- plot_all_lg1_rssi + stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") + geom_jitter(position=position_jitter(width=.2), size=3)
plot_all_lg1_rssi <- plot_all_lg1_rssi + ggtitle("LG RASP 1: RSSI COMPLETI media, st dev +/- media") + xlab("Distanza") + ylab("RSSI") + scale_color_manual(breaks = c("1", "2", "4", "5"),values=c("darkgreen", "darkviolet", "darkblue", "darkred"))
plot_all_lg1_rssi
grid.arrange(bplot_lg1_rssi, plot_all_lg1_rssi, widths=c(0.5, 0.5), ncol=2)
lg_notturno_finger <- ggplot(LG_NOTTURNO, aes(x=timestamp, y=rssi, color=attempt))  + geom_point() +
scale_color_manual(breaks = c("1", "2", "3"),values=c("green", "violet", "blue", "red")) + ggtitle("LG - RASP1 - Distanza 3 metri - 3 misurazioni")
grid.arrange(bplot_sam1_rssi, bplot_sam2_rssi, widths=c(0.5, 0.5), ncol=2)
grid.arrange(bplot_sam1_rx, bplot_sam2_rx, widths=c(0.5, 0.5), ncol=2)
finger_train_target  <- head(unordered_finger_set$distance, 4622)
train_plot <-   geom_point(data = finger_train,aes(x = echo_time,y = rssi, group=distance, color=distance))
test_plot <- stat_sum(data = test_2,aes(x = echo_time,y = rssi, colour=distance))
g <- ggplot()
g + train_plot + test_plot
LG_FINGERPRINT_CORRIDOIO <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO.csv",  col_types = cols(`01` = col_character()))
colnames(LG_FINGERPRINT_CORRIDOIO)[3] <- "distance"
ggplot(data = LG_FINGERPRINT_CORRIDOIO,aes(x = distance,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle("LG RSSI distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO,aes(x = rssi,y = echo_time, group=distance, color=distance)) + geom_point() + ggtitle("LG + RSSI ECHO RESP TIME distanza")
min.mean.sd.max <- function(x) {
r <- c(min(x), mean(x) - sd(x), mean(x), mean(x) + sd(x), max(x))
names(r) <- c("ymin", "lower", "middle", "upper", "ymax")
r
}
normalize <- function(x){ return( (x - min(x)) / (max(x) - min(x) ))  }
bplot_lg_finger <- ggplot(aes(y = rssi, x = factor(distance), color= distance), data = LG_FINGERPRINT_CORRIDOIO)
bplot_lg_finger <- bplot_lg_finger + stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") + geom_jitter(position=position_jitter(width=.2), size=3)
bplot_lg_finger <- bplot_lg_finger + ggtitle("LG fingerprint: RSSI media, st dev +/- media") + xlab("Distanza") + ylab("RSSI")
bplot_lg_finger
ggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + geom_point() + ggtitle("LG RSSI vs RX distanza")
colnames(LG_FINGERPRINT_CORRIDOIO_RX)[3] <- "distance"
ggplot(data = LG_FINGERPRINT_CORRIDOIO,aes(x = distance,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle("LG RSSI distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO,aes(x = rssi,y = echo_time, group=distance, color=distance)) + geom_point() + ggtitle("LG + RSSI ECHO RESP TIME distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + geom_point() + ggtitle("LG RSSI vs RX distanza")
LG_FINGERPRINT_CORRIDOIO_RX <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO.csv",  col_types = cols(`01` = col_character()))
View(LG_FINGERPRINT_CORRIDOIO)
View(LG_FINGERPRINT_CORRIDOIO_RX)
View(LG_FINGERPRINT_CORRIDOIO_RX)
LG_FINGERPRINT_CORRIDOIO <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO.csv",  col_types = cols(`01` = col_character()))
LG_FINGERPRINT_CORRIDOIO_RX <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO_RX.csv",  col_types = cols(`01` = col_character()))
colnames(LG_FINGERPRINT_CORRIDOIO)[3] <- "distance"
colnames(LG_FINGERPRINT_CORRIDOIO_RX)[3] <- "distance"
ggplot(data = LG_FINGERPRINT_CORRIDOIO,aes(x = distance,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle("LG RSSI distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO,aes(x = rssi,y = echo_time, group=distance, color=distance)) + geom_point() + ggtitle("LG + RSSI ECHO RESP TIME distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + geom_point() + ggtitle("LG RSSI vs RX distanza")
View(LG_FINGERPRINT_CORRIDOIO)
View(LG_FINGERPRINT_CORRIDOIO)
View(LG_FINGERPRINT_CORRIDOIO_RX)
function (file, col_names = TRUE, col_types = NULL, locale = default_locale(),
na = c("", "NA"), quoted_na = TRUE, quote = "\"", comment = "",
trim_ws = TRUE, skip = 0, n_max = Inf, guess_max = min(1000,
n_max), progress = show_progress())
LG_FINGERPRINT_CORRIDOIO_RX <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO_RX.csv",  col_types = cols(`01` = col_character()))
colnames(LG_FINGERPRINT_CORRIDOIO)[3] <- "distance"
colnames(LG_FINGERPRINT_CORRIDOIO_RX)[4] <- "distance"
ggplot(data = LG_FINGERPRINT_CORRIDOIO,aes(x = distance,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle("LG RSSI distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO,aes(x = rssi,y = echo_time, group=distance, color=distance)) + geom_point() + ggtitle("LG + RSSI ECHO RESP TIME distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + geom_point() + ggtitle("LG RSSI vs RX distanza")
View(LG_FINGERPRINT_CORRIDOIO_RX)
LG_FINGERPRINT_CORRIDOIO_RX <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO_RX.csv",  col_types = cols(`01` = col_character()))
View(LG_FINGERPRINT_CORRIDOIO_RX)
colnames(LG_FINGERPRINT_CORRIDOIO)[3] <- "distance"
colnames(LG_FINGERPRINT_CORRIDOIO_RX)[4] <- "distance"
View(LG_FINGERPRINT_CORRIDOIO_RX)
ggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + geom_point() + ggtitle("LG RSSI vs RX distanza")
TAB_FINGERPRINT_CORRIDOIO_RX <- read_csv("~/Documents/R_files/RSSIvsRX/data/TAB_FINGERPRINT_CORRIDOIO_RX.csv",  col_types = cols(`01` = col_character()))
colnames(TAB_FINGERPRINT_CORRIDOIO_RX)[4] <- "distance"
ggplot(data = TAB_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + geom_point() + ggtitle("LG RSSI vs RX distanza")
ggplot(data = TAB_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + geom_point() + ggtitle("LG RSSI vs RX distanza")
ggplot(data = TAB_FINGERPRINT_CORRIDOIO_RX,aes(x = rx,y = rssi, group=distance, color=distance)) + geom_point() + ggtitle("LG RSSI vs RX distanza")
ggplot(data = TAB_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + geom_point() + ggtitle("TAB RSSI vs RX distanza")
ggplot(data = TAB_FINGERPRINT_CORRIDOIO_RX,aes(x = rx,y = rssi, group=distance, color=distance)) + geom_point() + ggtitle("TAB RX vs RSSI distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rx,y = rssi, group=distance, color=distance)) + geom_point() + ggtitle("LG RX vs RSSI distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + stat_sum() + ggtitle("LG RSSI vs RX distanza")
require(ggplot2)
LG_FINGERPRINT_CORRIDOIO <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO.csv",  col_types = cols(`01` = col_character()))
LG_FINGERPRINT_CORRIDOIO <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO.csv",  col_types = cols(`01` = col_character()))
LG_FINGERPRINT_CORRIDOIO_RX <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO_RX.csv",  col_types = cols(`01` = col_character()))
TAB_FINGERPRINT_CORRIDOIO_RX <- read_csv("~/Documents/R_files/RSSIvsRX/data/TAB_FINGERPRINT_CORRIDOIO_RX.csv",  col_types = cols(`01` = col_character()))
require(class)
library(readr)
require(ggplot2)
LG_FINGERPRINT_CORRIDOIO <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO.csv",  col_types = cols(`01` = col_character()))
LG_FINGERPRINT_CORRIDOIO <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO.csv",  col_types = cols(`01` = col_character()))
LG_FINGERPRINT_CORRIDOIO_RX <- read_csv("~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO_RX.csv",  col_types = cols(`01` = col_character()))
TAB_FINGERPRINT_CORRIDOIO_RX <- read_csv("~/Documents/R_files/RSSIvsRX/data/TAB_FINGERPRINT_CORRIDOIO_RX.csv",  col_types = cols(`01` = col_character()))
colnames(LG_FINGERPRINT_CORRIDOIO)[3] <- "distance"
colnames(LG_FINGERPRINT_CORRIDOIO_RX)[4] <- "distance"
colnames(TAB_FINGERPRINT_CORRIDOIO_RX)[4] <- "distance"
ggplot(data = LG_FINGERPRINT_CORRIDOIO,aes(x = distance,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle("LG RSSI distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO,aes(x = rssi,y = echo_time, group=distance, color=distance)) + geom_point() + ggtitle("LG + RSSI ECHO RESP TIME distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + stat_sum() + ggtitle("LG RSSI vs RX distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rx,y = rssi, group=distance, color=distance)) + geom_point() + ggtitle("LG RX vs RSSI distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + stat_sum() + ggtitle("LG RSSI vs RX distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rx,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle("LG RX vs RSSI distanza")
ggplot(data = TAB_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + stat_sum() + ggtitle("TAB RSSI vs RX distanza")
ggplot(data = TAB_FINGERPRINT_CORRIDOIO_RX,aes(x = rx,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle("TAB RX vs RSSI distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + stat_sum() + ggtitle("LG RSSI vs RX distanza")
ggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rx,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle("LG RX vs RSSI distanza")
ggplot(data = TAB_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + stat_sum() + ggtitle("TAB RSSI vs RX distanza")
ggplot(data = TAB_FINGERPRINT_CORRIDOIO_RX,aes(x = rx,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle("TAB RX vs RSSI distanza")
LG_1METRO_RASP1$distance
LG_1METRO_RASP1$rssi
LG_FINGERPRINT_CORRIDOIO
LG_FINGERPRINT_CORRIDOIO$rssi
subset(LG_FINGERPRINT_CORRIDOIO, LG_FINGERPRINT_CORRIDOIO$distance == "01")
1m_lg = subset(LG_FINGERPRINT_CORRIDOIO, LG_FINGERPRINT_CORRIDOIO$distance == "01")
1m_lg = subset(LG_FINGERPRINT_CORRIDOIO, LG_FINGERPRINT_CORRIDOIO$distance == "01")
1m_lg <- subset(LG_FINGERPRINT_CORRIDOIO, LG_FINGERPRINT_CORRIDOIO$distance == "01")
unmetro_lg <- subset(LG_FINGERPRINT_CORRIDOIO, LG_FINGERPRINT_CORRIDOIO$distance == "01")
mean(unmetro_lg$rssi)
