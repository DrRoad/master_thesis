#S3
plot(s3_distanze_tutte$rssi, s3_distanze_tutte$rx)
abline(lm(s3_distanze_tutte$rx ~ s3_distanze_tutte$rssi))
s3.lm = lm(s3_distanze_tutte$rx ~ s3_distanze_tutte$rssi)
summary(s3.lm)$r.squared
lm(s3_distanze_tutte$rx ~ s3_distanze_tutte$rssi)
#plot(ipad_distanze_tutte$rssi, ipad_distanze_tutte$rx)
#abline(lm(ipad_distanze$rx ~ ipad_distanze$rssi))
#plot(tab_distanze_tutte$rssi, tab_distanze_tutte$rx)
#abline(lm(tab_distanze$rx ~ tab_distanze$rssi))
subset(lg_wifiVSbt, lg_wifiVSbt$distance == "01")
plot(ipad_filtro$rssi, ipad_filtro$rx)
abline(lm(ipad_filtro$rx ~ ipad_filtro$rssi))
ipad_filtro.lm = lm(ipad_filtro$rx ~ ipad_filtro$rssi)
summary(ipad_filtro.lm)$r.squared
ipad_pos = ipad_filtro
ipad_pos$rssi = abs(ipad_filtro$rssi) + 1
ipad_pos$rx = abs(ipad_filtro$rx)
plot(ipad_pos$rssi, ipad_pos$rx)
log_ipad = glm(ipad_pos$rx ~ ipad_pos$rssi)
linear_ipad_1 = lm(ipad_pos$rx ~ ipad_pos$rssi)
linear_ipad_2 = lm(ipad_pos$rx ~ poly(ipad_pos$rssi,2,raw=TRUE))
linear_ipad_3 = lm(ipad_pos$rx ~ poly(ipad_pos$rssi,3,raw=TRUE))
linear_ipad_4 = lm(ipad_pos$rx ~ poly(ipad_pos$rssi,4,raw=TRUE))
ip.lm <- predict(linear_ipad)
ip.log <- predict(log_ipad)
lines(ip.log, col="blue", lwd=2)
plot(ipad_pos$rssi, ipad_pos$rx)
fit <- lm(ipad_pos$rx~log(ipad_pos$rssi))
dim(ipad_pos)
n = 163
x=seq(0,100, length=163)
y=predict(fit,newdata=list(x=seq(from=1,to=n,length.out=1000)), interval="confidence")
matlines(x,y,lwd=2)
dim(x)
dim(y)
xx <- seq(0,100, length=163)
lines(ipad_pos, predict(linear_ipad_1, data.frame(x=ipad_pos)), col="red")
lines(xx, predict(linear_ipad_2, data.frame(x=xx)), col="red")
lines(xx, predict(linear_ipad_3, data.frame(x=xx)), col="red")
lines(xx, predict(linear_ipad_4, data.frame(x=xx)), col="red")
plot(s3_distanze_tutte$rssi, s3_distanze_tutte$rx)
abline(lm(s3_distanze_tutte$rx ~ s3_distanze_tutte$rssi))
s3.lm = lm(s3_distanze_tutte$rx ~ s3_distanze_tutte$rssi)
summary(s3.lm)$r.squared
lm(s3_distanze_tutte$rx ~ s3_distanze_tutte$rssi)
subset(lg_wifiVSbt, lg_wifiVSbt$distance == "01")
plot(ipad_movimento$rssi, ipad_movimento$rx)
abline(lm(ipad_movimento$rx ~ ipad_movimento$rssi))
ipad.lm = lm(ipad_movimento$rx ~ ipad_movimento$rssi)
summary(ipad.lm)$r.squared
plot(ipad_filtro$rssi, ipad_filtro$rx)
abline(lm(ipad_filtro$rx ~ ipad_filtro$rssi))
ipad_filtro.lm = lm(ipad_filtro$rx ~ ipad_filtro$rssi)
summary(ipad_filtro.lm)$r.squared
ipad_pos = ipad_filtro
ipad_pos$rssi = abs(ipad_filtro$rssi) + 1
ipad_pos$rx = abs(ipad_filtro$rx)
plot(ipad_pos$rssi, ipad_pos$rx)
log_ipad = glm(ipad_pos$rx ~ ipad_pos$rssi)
linear_ipad_1 = lm(ipad_pos$rx ~ ipad_pos$rssi)
linear_ipad_2 = lm(ipad_pos$rx ~ poly(ipad_pos$rssi,2,raw=TRUE))
linear_ipad_3 = lm(ipad_pos$rx ~ poly(ipad_pos$rssi,3,raw=TRUE))
linear_ipad_4 = lm(ipad_pos$rx ~ poly(ipad_pos$rssi,4,raw=TRUE))
ip.lm <- predict(linear_ipad)
ip.log <- predict(log_ipad)
lines(ip.log, col="blue", lwd=2)
plot(ipad_pos$rssi, ipad_pos$rx)
fit <- lm(ipad_pos$rx~log(ipad_pos$rssi))
dim(ipad_pos)
n = 163
x=seq(0,100, length=163)
y=predict(fit,newdata=list(x=seq(from=1,to=n,length.out=1000)), interval="confidence")
matlines(x,y,lwd=2)
dim(x)
dim(y)
xx <- seq(0,100, length=163)
lines(ipad_pos, predict(linear_ipad_1, data.frame(x=ipad_pos)), col="red")
lines(xx, predict(linear_ipad_2, data.frame(x=xx)), col="red")
lines(xx, predict(linear_ipad_3, data.frame(x=xx)), col="red")
lines(xx, predict(linear_ipad_4, data.frame(x=xx)), col="red")
plot(s3_distanze_tutte$rssi, s3_distanze_tutte$rx)
matlines(x,y,lwd=2)
dim(x)
dim(y)
xx <- seq(0,100, length=163)
lines(ipad_pos, predict(linear_ipad_1, data.frame(x=ipad_pos)), col="red")
lines(xx, predict(linear_ipad_2, data.frame(x=xx)), col="red")
lines(xx, predict(linear_ipad_3, data.frame(x=xx)), col="red")
lines(xx, predict(linear_ipad_4, data.frame(x=xx)), col="red")
plot(s3_distanze_tutte$rssi, s3_distanze_tutte$rx)
abline(lm(s3_distanze_tutte$rx ~ s3_distanze_tutte$rssi))
s3.lm = lm(s3_distanze_tutte$rx ~ s3_distanze_tutte$rssi)
summary(s3.lm)$r.squared
lm(s3_distanze_tutte$rx ~ s3_distanze_tutte$rssi)
subset(lg_wifiVSbt, lg_wifiVSbt$distance == "01")
plot(ipad_movimento$rssi, ipad_movimento$rx)
abline(lm(ipad_movimento$rx ~ ipad_movimento$rssi))
ipad.lm = lm(ipad_movimento$rx ~ ipad_movimento$rssi)
summary(ipad.lm)$r.squared
plot(ipad_filtro$rssi, ipad_filtro$rx)
abline(lm(ipad_filtro$rx ~ ipad_filtro$rssi))
ipad_filtro.lm = lm(ipad_filtro$rx ~ ipad_filtro$rssi)
summary(ipad_filtro.lm)$r.squared
ipad_pos = ipad_filtro
ipad_pos$rssi = abs(ipad_filtro$rssi) + 1
ipad_pos$rx = abs(ipad_filtro$rx)
plot(ipad_pos$rssi, ipad_pos$rx)
log_ipad = glm(ipad_pos$rx ~ ipad_pos$rssi)
linear_ipad_1 = lm(ipad_pos$rx ~ ipad_pos$rssi)
linear_ipad_2 = lm(ipad_pos$rx ~ poly(ipad_pos$rssi,2,raw=TRUE))
linear_ipad_3 = lm(ipad_pos$rx ~ poly(ipad_pos$rssi,3,raw=TRUE))
linear_ipad_4 = lm(ipad_pos$rx ~ poly(ipad_pos$rssi,4,raw=TRUE))
ip.lm <- predict(linear_ipad)
ip.log <- predict(log_ipad)
lines(ip.log, col="blue", lwd=2)
plot(ipad_pos$rssi, ipad_pos$rx)
fit <- lm(ipad_pos$rx~log(ipad_pos$rssi))
dim(ipad_pos)
n = 163
xx <- seq(0,100, length=163)
lines(ipad_pos, predict(linear_ipad_1, data.frame(x=ipad_pos)), col="red")
lines(xx, predict(linear_ipad_2, data.frame(x=xx)), col="red")
lines(xx, predict(linear_ipad_3, data.frame(x=xx)), col="red")
lines(xx, predict(linear_ipad_4, data.frame(x=xx)), col="red")
plot(s3_distanze_tutte$rssi, s3_distanze_tutte$rx)
x = ipad_pos$rssi
y=ipad_pos$rx
plot(y~x)
fit <- lm(y~log(x))
summary(fit)
lm(formula = y ~ log(x))
x=seq(from=1,to=n,length.out=1000)
y=predict(fit,newdata=list(x=seq(from=1,to=n,length.out=1000)),       interval="confidence")
matlines(x,y,lwd=2)
matlines(x,y,lwd=2)
matlines(x,y,lwd=2)
# Year: 2017
# Title: Massa di cellulari, wifi acceso, schermo acceso/spento
# Goal: Capire numero di probe request
# Author: Edoardo Longo
#
#
# Define your working directory
# Ensure to use the forward / slash
setwd("/Users/edoardesd/Documents/R_files")
getwd()
#INIZIO IMPORT
require(class)
library(readr)
require(ggplot2)
##### IMPORT ####
probe_wifi_spento <- read_csv("~/Documents/R_files/RSSIvsWIFI/data/probe_wifi_spento.csv", col_types = cols(timestamp = col_time(format = "%H:%M:%OS")))
probe_wifi_acceso <- read_csv("~/Documents/R_files/RSSIvsWIFI/data/probe_wifi_acceso.csv", col_types = cols(timestamp = col_time(format = "%H:%M:%OS")))
probe2_spento <- read_csv("~/Documents/R_files/RSSIvsWIFI/data/probe2_spento.csv", col_types = cols(timestamp = col_time(format = "%H:%M:%OS")))
probe2_acceso <- read_csv("~/Documents/R_files/RSSIvsWIFI/data/probe2_acceso.csv", col_types = cols(timestamp = col_time(format = "%H:%M:%OS")))
dim(probe_wifi_acceso)
dim(probe_wifi_spento)
##### SUBSET####
lg_acceso = subset(probe_wifi_acceso, mac_address == 'C4:43:8F:B3:0A:F7')
s3_acceso = subset(probe_wifi_acceso, mac_address == 'C8:14:79:31:3C:2A')
tab_acceso = subset(probe_wifi_acceso, mac_address == '84:11:9E:FD:16:B3')
ipadpro_acceso = subset(probe_wifi_acceso, mac_address == 'A4:F1:E8:A9:DB:61')
ipad_acceso = subset(probe_wifi_acceso, mac_address == 'DC:A9:04:4F:D9:35')
asus_acceso = subset(probe_wifi_acceso, mac_address == '34:97:F6:B8:E7:E3')
mac_acceso = subset(probe_wifi_acceso, mac_address == '98:01:A7:B6:B2:BD')
lg_spento = subset(probe_wifi_spento, mac_address == 'C4:43:8F:B3:0A:F7')
s3_spento = subset(probe_wifi_spento, mac_address == 'C8:14:79:31:3C:2A')
tab_spento = subset(probe_wifi_spento, mac_address == '84:11:9E:FD:16:B3')
ipadpro_spento = subset(probe_wifi_spento, mac_address == 'A4:F1:E8:A9:DB:61')
ipad_spento = subset(probe_wifi_spento, mac_address == 'DC:A9:04:4F:D9:35')
asus_spento = subset(probe_wifi_spento, mac_address == '34:97:F6:B8:E7:E3')
mac_spento = subset(probe_wifi_spento, mac_address == '98:01:A7:B6:B2:BD')
lg_acceso_2 = subset(probe2_acceso, mac_address == 'C4:43:8F:B3:0A:F7')
sams_acceso_2 = subset(probe2_acceso, mac_address == 'D8:90:E8:29:AD:3F')
s3_acceso_2 = subset(probe2_acceso, mac_address == 'C8:14:79:31:3C:2A')
tab_acceso_2 = subset(probe2_acceso, mac_address == '84:11:9E:FD:16:B3')
ipadpro_acceso_2 = subset(probe2_acceso, mac_address == 'A4:F1:E8:A9:DB:61')
ipad_acceso_2 = subset(probe2_acceso, mac_address == 'DC:A9:04:4F:D9:35')
asus_acceso_2 = subset(probe2_acceso, mac_address == '34:97:F6:B8:E7:E3')
mac_acceso_2 = subset(probe2_acceso, mac_address == '98:01:A7:B6:B2:BD')
lg_spento_2 = subset(probe2_spento, mac_address == 'C4:43:8F:B3:0A:F7')
sams_spento_2 = subset(probe2_spento, mac_address == 'D8:90:E8:29:AD:3F')
s3_spento_2 = subset(probe2_spento, mac_address == 'C8:14:79:31:3C:2A')
tab_spento_2 = subset(probe2_spento, mac_address == '84:11:9E:FD:16:B3')
ipadpro_spento_2 = subset(probe2_spento, mac_address == 'A4:F1:E8:A9:DB:61')
ipad_spento_2 = subset(probe2_spento, mac_address == 'DC:A9:04:4F:D9:35')
asus_spento_2 = subset(probe2_spento, mac_address == '34:97:F6:B8:E7:E3')
mac_spento_2 = subset(probe2_spento, mac_address == '98:01:A7:B6:B2:BD')
##### CREO FRAME ####
on_frame = data.frame(
group = c("lg", "s3", "tab", "ipadpro", "ipad", "asus", "mac"),
value = c(dim(lg_acceso)[1], dim(s3_acceso)[1], dim(tab_acceso)[1], dim(ipadpro_acceso)[1], dim(ipad_acceso)[1], dim(asus_acceso)[1], dim(mac_acceso)[1])
)
off_frame = data.frame(
group = c("lg", "s3", "tab", "ipadpro", "ipad", "asus", "mac"),
value = c(dim(lg_spento)[1], dim(s3_spento)[1], dim(tab_spento)[1], dim(ipadpro_spento)[1], dim(ipad_spento)[1], dim(asus_spento)[1], dim(mac_spento)[1])
)
on_frame2 = data.frame(
group = c("lg", "s3", "tab", "ipadpro", "ipad", "asus", "mac", "sam s"),
value = c(dim(lg_acceso_2)[1], dim(s3_acceso_2)[1], dim(tab_acceso_2)[1], dim(ipadpro_acceso_2)[1], dim(ipad_acceso_2)[1], dim(asus_acceso_2)[1], dim(mac_acceso_2)[1], dim(sams_acceso_2)[1])
)
off_frame2 = data.frame(
group = c("lg", "s3", "tab", "ipad", "asus", "sam s"),
value = c(dim(lg_spento_2)[1], dim(s3_spento_2)[1], dim(tab_spento_2)[1], dim(ipad_spento_2)[1], dim(asus_spento_2)[1], dim(sams_spento_2)[1])
)
##### PLOT #####
bp_acceso<- ggplot(on_frame, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
pie_acceso <- bp_acceso + coord_polar("y", start=0) + ggtitle("Schermo Acceso")
pie_acceso
bp_spento<- ggplot(off_frame, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
pie_spento <- bp_spento + coord_polar("y", start=0) + ggtitle("Schermo Spento")
pie_spento
bp2_acceso<- ggplot(on_frame2, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
pie2_acceso <- bp2_acceso + coord_polar("y", start=0) + ggtitle("Schermo Acceso prova 2")
pie2_acceso
bp2_spento<- ggplot(off_frame2, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
pie2_spento <- bp2_spento + coord_polar("y", start=0) + ggtitle("Schermo Spento prova 2")
pie2_spento
barplot(on_frame$value, names=on_frame$group, ylim=c(0,3000), main="Schermo acceso")
barplot(off_frame$value, names=off_frame$group, ylim=c(0,3000), main="Schermo spento")
barplot(on_frame2$value, names=on_frame2$group, ylim=c(0,3000), main="Schermo acceso prova 2")
barplot(off_frame2$value, names=off_frame2$group, ylim=c(0,3000), main="Schermo spento prova 2")
dim(lg_spento_2)
dim(sams_spento_2)
dim(s3_spento_2)
dim(tab_spento_2)
dim(ipad_spento_2)
dim(asus_spento_2)
dim(lg_acceso_2)
dim(sams_acceso_2)
dim(s3_acceso_2)
dim(tab_acceso_2)
dim(ipad_acceso_2)
dim(asus_acceso_2)
plot(lg_wifiVSbt$wifi, lg_wifiVSbt$bluetooth)
lgdist.lm = lm(lg_wifiVSbt$wifi ~ lg_wifiVSbt$bluetooth)
abline(lm(lg_wifiVSbt$bluetooth ~ lg_wifiVSbt$wifi))
plot(sams_wifiVSbt$wifi, sams_wifiVSbt$bluetooth)
sams.lm = lm(sams_wifiVSbt$wifi ~ sams_wifiVSbt$bluetooth)
abline(lm(sams_wifiVSbt$bluetooth ~ sams_wifiVSbt$wifi))
plot(lg_wifiVSbt$wifi, lg_wifiVSbt$bluetooth)
lgdist.lm = lm(lg_wifiVSbt$wifi ~ lg_wifiVSbt$bluetooth)
abline(lm(lg_wifiVSbt$bluetooth ~ lg_wifiVSbt$wifi))
summary(lgdist.lm)$r.squared
plot(sams_wifiVSbt$wifi, sams_wifiVSbt$bluetooth)
sams.lm = lm(sams_wifiVSbt$wifi ~ sams_wifiVSbt$bluetooth)
abline(lm(sams_wifiVSbt$bluetooth ~ sams_wifiVSbt$wifi))
summary(sams.lm)$r.squared
plot(movimentato_lg_milli$rssi, movimentato_lg_milli$rx)
plot(lg_wifiVSbt$wifi, lg_wifiVSbt$bluetooth)
lgdist.lm = lm(lg_wifiVSbt$wifi ~ lg_wifiVSbt$bluetooth)
abline(lm(lg_wifiVSbt$bluetooth ~ lg_wifiVSbt$wifi))
plot(movimentato_lg_milli$rssi, movimentato_lg_milli$rx)
abline(lm(movimentato_lg_milli$rx ~ movimentato_lg_milli$rssi))
#generating the data
x = ipad_pos$rssi
y=ipad_pos$rx
#plot the data
plot(y~x)
#fit log model
fit <- lm(y~log(x))
#Results of the model
summary(fit)
lm(formula = y ~ log(x))
#plot
x=seq(from=1,to=n,length.out=1000)
y=predict(fit,newdata=list(x=seq(from=1,to=n,length.out=1000)),       interval="confidence")
matlines(x,y,lwd=2)
x = ipad_pos$rssi
y=ipad_pos$rx
ipad_pos
plot(y~x)
lm(y~log(x)
lm(y~log(x))
fit <- lm(y~log(x))
summary(fit)
y=predict(fit,newdata=list(x=seq(from=1,to=n,length.out=1000)),interval="confidence")
matlines(x,y,lwd=2)
x=seq(from=1,to=n,length.out=1000)
y=predict(fit,newdata=list(x=seq(from=1,to=n,length.out=1000)),interval="confidence")
matlines(x,y,lwd=2)
lm(formula = y ~ log(x))
x = ipad_pos$rssi
y = ipad_pos$rx
plot(y~x)
fit <- lm(y~log(x))
summary(fit)
lm(formula = y ~ log(x))
x=seq(from=1,to=n,length.out=1000)
y=predict(fit,newdata=list(x=seq(from=1,to=n,length.out=1000)),interval="confidence")
matlines(x,y,lwd=2)
#generating the data
x = ipad_pos$rssi
y = ipad_pos$rx
#plot the data
plot(y~x)
#fit log model
fit <- lm(y~log(x))
#Results of the model
summary(fit)
lm(formula = y ~ log(x))
#plot
x=seq(from=1,to=n,length.out=1000)
y=predict(fit,newdata=list(x=seq(from=1,to=n,length.out=1000)), interval="confidence")
matlines(x,y,lwd=2)
ipad_pos
ipad_filtro
plot(ipad_filtro$rssi, ipad_filtro$rx)
abline(lm(ipad_filtro$rx ~ ipad_filtro$rssi))
ipad_filtro.lm = lm(ipad_filtro$rx ~ ipad_filtro$rssi)
summary(ipad_filtro.lm)$r.squared
ipad_pos = ipad_filtro
ipad_pos$rssi = abs(ipad_filtro$rssi) + 1
ipad_pos$rx = abs(ipad_filtro$rx)
plot(ipad_pos$rssi, ipad_pos$rx)
lg_filtro <- read_csv("~/Documents/TEST/TEST_2/movimentato/lg_filtro.csv")
require(class)
library(readr)
require(ggplot2)
library(readxl)
lg_filtro <- read_csv("~/Documents/TEST/TEST_2/movimentato/lg_filtro.csv")
plot(ipad_filtro$rssi, ipad_filtro$rx)
abline(lm(ipad_filtro$rx ~ ipad_filtro$rssi))
ipad_filtro.lm = lm(ipad_filtro$rx ~ ipad_filtro$rssi)
summary(ipad_filtro.lm)$r.squared
ipad_pos = ipad_filtro
ipad_pos$rssi = abs(ipad_filtro$rssi) + 1
ipad_pos$rx = abs(ipad_filtro$rx)
plot(ipad_pos$rssi, ipad_pos$rx)
plot(lg_filtro$rssi, lg_filtro$rx)
lg_pos = lg_filtro
lg_pos$rssi = abs(lg_filtro$rssi) + 1
lg_pos$rx = abs(lg_filtro$rx)
plot(lg_pos$rssi, lg_pos$rx)
x = lg_pos$rssi
y = lg_pos$rx
plot(y~x)
fit <- lm(y~log(x))
summary(fit)
lm(formula = y ~ log(x))
x=seq(from=1,to=n,length.out=1000)
y=predict(fit,newdata=list(x=seq(from=1,to=n,length.out=1000)), interval="confidence")
matlines(x,y,lwd=2)
ipad_pos$rssi = abs(ipad_filtro$rssi) + 0.001
ipad_pos$rx = abs(ipad_filtro$rx)
plot(ipad_pos$rssi, ipad_pos$rx)
log_ipad = glm(ipad_pos$rx ~ ipad_pos$rssi)
x = lg_pos$rssi
y = lg_pos$rx
plot(y~x)
fit <- lm(y~log(x))
summary(fit)
lm(formula = y ~ log(x))
x=seq(from=1,to=n,length.out=1000)
y=predict(fit,newdata=list(x=seq(from=1,to=n,length.out=1000)), interval="confidence")
matlines(x,y,lwd=2)
summary(fit)
lm(formula = y ~ log(x))
x = lg_pos$rssi
y = lg_pos$rx
plot(y~x)
fit <- lm(y~log(x))
summary(fit)
lm(formula = y ~ log(x))
x=seq(from=1,to=n,length.out=1000)
y=predict(fit,newdata=list(x=seq(from=1,to=n,length.out=1000)), interval="confidence")
matlines(x,y,lwd=2)
lg_pos$rssi = abs(lg_filtro$rssi) + 0.001
lg_pos$rx = abs(lg_filtro$rx)
plot(lg_pos$rssi, lg_pos$rx)
ipad_pos$rssi = abs(ipad_filtro$rssi) + 0.001
ipad_pos$rx = abs(ipad_filtro$rx)
plot(ipad_pos$rssi, ipad_pos$rx)
log_ipad = glm(ipad_pos$rx ~ ipad_pos$rssi)
linear_ipad_1 = lm(ipad_pos$rx ~ ipad_pos$rssi)
linear_ipad_2 = lm(ipad_pos$rx ~ poly(ipad_pos$rssi,2,raw=TRUE))
x = lg_pos$rssi
y = lg_pos$rx
plot(y~x)
fit <- lm(y~log(x))
summary(fit)
lm(formula = y ~ log(x))
x=seq(from=1,to=n,length.out=1000)
y=predict(fit,newdata=list(x=seq(from=1,to=n,length.out=1000)), interval="confidence")
matlines(x,y,lwd=2)
ggplot(data = LG_1milli,aes(x = rssi,y = rx, group=distance, color=distance)) + stat_sum() + ggtitle("LG precisione decimo secondi")
ggplot(data = lg_pos,aes(x = rssi,y = rx, group=distance, color=distance)) + stat_sum() + ggtitle("LG precisione decimo secondi")
ggplot(data = lg_pos,aes(x = rssi,y = rx)) + stat_sum() + ggtitle("LG precisione decimo secondi")
x = lg_pos$rssi
y = lg_pos$rx
plot(y~x)
fit <- lm(y~log(x))
summary(fit)
lm(formula = y ~ log(x))
x=seq(from=1,to=n,length.out=1000)
y=predict(fit,newdata=list(x=seq(from=1,to=n,length.out=1000)), interval="confidence")
matlines(x,y,lwd=2)
library(readr)
lg_original_off_wifi <- read_csv("~/lg_original_off_wifi.csv")
View(lg_original_off_wifi)
lg_original_off_wifi <- read_csv("~/lg_original_off_wifi.csv")
lg_original_on_wifi <- read_csv("~/lg_original_on_wifi.csv")
lg_spento_original = subset(lg_original_off_wifi, mac_address == 'C4:43:8F:B3:0A:F7')
lg_original_off_wifi <- read_csv("~/lg_original_off_wifi.csv")
lg_original_on_wifi <- read_csv("~/lg_original_on_wifi.csv")
lg_spento_original = subset(lg_original_off_wifi, mac_address == 'C4:43:8F:B3:0A:F7')
lg_spento_original = subset(lg_original_off_wifi, mac address == 'C4:43:8F:B3:0A:F7')
lg_spento_original
lg_spento_original = subset(lg_original_off_wifi, mac_address == 'C4:43:8F:B3:0A:F7')
colnames(lg_original_off_wifi)[0] <- "mac_address"
lg_original_off_wifi
colnames(lg_original_off_wifi)[1] <- "mac_address"
lg_original_off_wifi
colnames(lg_original_on_wifi)[1] <- "mac_address"
lg_spento_original = subset(lg_original_off_wifi, mac_address == 'C4:43:8F:B3:0A:F7')
lg_acceso_original = subset(lg_original_on_wifi, mac_address == 'C4:43:8F:B3:0A:F7')
original_vs_mod_spento = data.frame(
group = c("original", "mod"),
value = c(dim(lg_spento_original)[1], dim(lg_spento_2)[1])
)
lg_spento_original = subset(lg_original_off_wifi, mac_address == 'C4:43:8F:B3:0A:F7')
lg_acceso_original = subset(lg_original_on_wifi, mac_address == 'C4:43:8F:B3:0A:F7')
vs_acceso<- ggplot(original_vs_mod_spento, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
require(ggplot2)
vs_acceso<- ggplot(original_vs_mod_spento, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
vs_original_acceso <- vs_acceso + coord_polar("y", start=0) + ggtitle("Schermo Acceso")
vs_original_acceso
original_vs_mod_spento = data.frame(
group = c("original", "mod"),
value = c(dim(lg_spento_original)[1], dim(lg_spento)[1])
)
bp_acceso<- ggplot(on_frame, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
pie_acceso <- bp_acceso + coord_polar("y", start=0) + ggtitle("Schermo Acceso")
pie_acceso
vs_acceso<- ggplot(original_vs_mod_spento, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
vs_original_acceso <- vs_acceso + coord_polar("y", start=0) + ggtitle("Schermo Acceso")
vs_original_acceso
colnames(lg_original_off_wifi)[1] <- "mac_address"
colnames(lg_original_on_wifi)[1] <- "mac_address"
lg_spento_original = subset(lg_original_off_wifi, mac_address == 'C4:43:8F:B3:0A:F7')
lg_acceso_original = subset(lg_original_on_wifi, mac_address == 'C4:43:8F:B3:0A:F7')
original_vs_mod_spento = data.frame(
group = c("original", "mod"),
value = c(dim(lg_spento_original)[1], dim(lg_spento)[1])
)
vs_acceso<- ggplot(original_vs_mod_spento, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
vs_original_acceso <- vs_acceso + coord_polar("y", start=0) + ggtitle("Schermo Acceso")
vs_original_acceso
original_vs_mod_spento = data.frame(
group = c("original", "mod"),
value = c(dim(lg_spento_original)[1], dim(lg_spento_2)[1])
)
bp_acceso<- ggplot(on_frame, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
pie_acceso <- bp_acceso + coord_polar("y", start=0) + ggtitle("Schermo Acceso")
pie_acceso
vs_acceso<- ggplot(original_vs_mod_spento, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
vs_original_acceso <- vs_acceso + coord_polar("y", start=0) + ggtitle("Schermo Acceso")
vs_original_acceso
original_vs_mod_acceso = data.frame(
group = c("original", "mod"),
value = c(dim(lg_acceso_original)[1], dim(lg_acceso_2)[1])
)
original_vs_mod_acceso = data.frame(
group = c("original", "mod"),
value = c(dim(lg_acceso_original)[1], dim(lg_acceso_2)[1])
)
vs_spento<- ggplot(original_vs_mod_spento, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
vs_original_spento <- vs_spento + coord_polar("y", start=0) + ggtitle("Schermo Acceso")
vs_original_spento
vs_spento<- ggplot(original_vs_mod_spento, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
vs_original_spento <- vs_spento + coord_polar("y", start=0) + ggtitle("Schermo Acceso")
vs_original_spento
vs_acceso<- ggplot(original_vs_mod_spento, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
vs_original_acceso <- vs_acceso + coord_polar("y", start=0) + ggtitle("Schermo Acceso")
vs_original_acceso
original_vs_mod_spento = data.frame(
group = c("original", "mod"),
value = c(dim(lg_spento_original)[1], dim(lg_spento_2)[1])
)
vs_acceso<- ggplot(original_vs_mod_spento, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
vs_original_acceso <- vs_acceso + coord_polar("y", start=0) + ggtitle("Schermo Acceso")
vs_original_acceso
vs_spento<- ggplot(original_vs_mod_spento, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
vs_original_spento <- vs_spento + coord_polar("y", start=0) + ggtitle("Schermo Acceso")
vs_original_spento
vs_acceso<- ggplot(original_vs_mod_acceso, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
vs_original_acceso <- vs_acceso + coord_polar("y", start=0) + ggtitle("Schermo Acceso")
vs_original_acceso
dim(lg_original_on_wifi)
dim(lg_acceso_2)
dim(lg_acceso_original)
dim(lg_acceso_2)
dim(lg_spento_original)
dim(lg_spento_2)
