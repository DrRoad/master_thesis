{
    "collab_server" : "",
    "contents" : "# Year: 2017\n# Title: Fingerprint corridoio, LG 10 metri\n# Goal: Classificare distanza in base rssi\n# Author: Edoardo Longo\n#\n# \n\n# Define your working directory\n# Ensure to use the forward / slash\nsetwd(\"/Users/edoardesd/Documents/R_files\")\ngetwd()\n\n#es: DATASET: rssi | echotime |  distance\n#             -10       23.34        \"1\"\n\n###### IMPORT ###### \nrequire(class)\nlibrary(readr)\nrequire(ggplot2)\nLG_FINGERPRINT_CORRIDOIO <- read_csv(\"~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO.csv\",  col_types = cols(`01` = col_character()))\nLG_FINGERPRINT_CORRIDOIO <- read_csv(\"~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO.csv\",  col_types = cols(`01` = col_character()))\n\nLG_FINGERPRINT_CORRIDOIO_RX <- read_csv(\"~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO_RX.csv\",  col_types = cols(`01` = col_character()))\nTAB_FINGERPRINT_CORRIDOIO_RX <- read_csv(\"~/Documents/R_files/RSSIvsRX/data/TAB_FINGERPRINT_CORRIDOIO_RX.csv\",  col_types = cols(`01` = col_character()))\n\n\ncolnames(LG_FINGERPRINT_CORRIDOIO)[3] <- \"distance\"\ncolnames(LG_FINGERPRINT_CORRIDOIO_RX)[4] <- \"distance\"\ncolnames(TAB_FINGERPRINT_CORRIDOIO_RX)[4] <- \"distance\"\n\n\n\nggplot(data = LG_FINGERPRINT_CORRIDOIO,aes(x = distance,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle(\"LG RSSI distanza\")\nggplot(data = LG_FINGERPRINT_CORRIDOIO,aes(x = rssi,y = echo_time, group=distance, color=distance)) + geom_point() + ggtitle(\"LG + RSSI ECHO RESP TIME distanza\")\nggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + stat_sum() + ggtitle(\"LG RSSI vs RX distanza\")\nggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rx,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle(\"LG RX vs RSSI distanza\")\nggplot(data = TAB_FINGERPRINT_CORRIDOIO_RX,aes(x = rssi,y = rx, group=distance, color=distance)) + stat_sum() + ggtitle(\"TAB RSSI vs RX distanza\")\nggplot(data = TAB_FINGERPRINT_CORRIDOIO_RX,aes(x = rx,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle(\"TAB RX vs RSSI distanza\")\n\n#Boxplot con media e deviazione standard\n\n#function for computing mean, DS, max and min values\nmin.mean.sd.max <- function(x) {\n  r <- c(min(x), mean(x) - sd(x), mean(x), mean(x) + sd(x), max(x))\n  names(r) <- c(\"ymin\", \"lower\", \"middle\", \"upper\", \"ymax\")\n  r\n}\n\nnormalize <- function(x){ return( (x - min(x)) / (max(x) - min(x) ))  }\n\n\nbplot_lg_finger <- ggplot(aes(y = rssi, x = factor(distance), color= distance), data = LG_FINGERPRINT_CORRIDOIO)\nbplot_lg_finger <- bplot_lg_finger + stat_summary(fun.data = min.mean.sd.max, geom = \"boxplot\") + geom_jitter(position=position_jitter(width=.2), size=3)\nbplot_lg_finger <- bplot_lg_finger + ggtitle(\"LG fingerprint: RSSI media, st dev +/- media\") + xlab(\"Distanza\") + ylab(\"RSSI\")\nbplot_lg_finger\n\n\n\n######## TODO #######\n#knn con echo e rssi, vedere quando è l'errore <- FATTO!\n#knn monocolonna solo con rssi, vedere errore <- FATTO\n#knn con rssi e rx (cambiare dataset)\n#knn con media, mediana, moda, deviazione standard, andando a separare il dataset in gruppi da 100\n\n\n###### k-NN Normalizzto  RSSI + ECHO ###### \n#Errore alto\n\ngp <- runif(nrow(LG_FINGERPRINT_CORRIDOIO))\nunordered_finger_set <- LG_FINGERPRINT_CORRIDOIO[order(gp),] #mischio il set\nsummary(unordered_finger_set)\n\n#Normalizzo\nnorm_finger <- as.data.frame(lapply(unordered_finger_set[,c(1,2)], normalize))\nsummary(norm_finger)\n\nfinger_train_norm <- norm_finger[1:4622,]\nfinger_test_norm <- norm_finger[4623:4632,]\ndim(finger_train_norm )\ndim(finger_test_norm )\n\nfinger_train_target_norm  <- head(unordered_finger_set$distance, 4622)\nlength(finger_train_target_norm )\n\nfinger_correct_norm  <- tail(unordered_finger_set$distance, 10)\nlength(finger_correct_norm )\n\nlg_err_norm<-numeric()\n\nfor(i in 1:60){\n  lg_knn_norm <- knn(finger_train_norm , finger_test_norm , finger_train_target_norm , k=i)\n  lg_err_norm <- c(lg_err_norm, mean(lg_knn_norm == finger_correct_norm))\n}\n\nplot(1-lg_err_norm,type=\"l\",ylab=\"Error Rate\",\n     xlab=\"K\",main=\"Error Rate for LG Normalized With Varying K\")\n\n##### k-NN NON Normalizzato RSSI + ECHO#####\n\nfinger_train <- unordered_finger_set[1:4622,]\nfinger_train\nfinger_test <- unordered_finger_set[4623:4642,]\ntest_2 <- rssi_lg_rasp1[20: 40,]\ndim(test_2)\ntest_2$timestamp= NULL\n\nfinger_train_target  <- head(unordered_finger_set$distance, 4622)\n\ncbPalette <- c(\"#999999\", \"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\")\n\n#plot test + train fusi <- CAMBIARE COLORE DI TEST PLOT\ntrain_plot <-   geom_point(data = finger_train,aes(x = echo_time,y = rssi, group=distance, color=distance)) \ntest_plot <- stat_sum(data = finger_test,aes(x = echo_time,y = rssi, colour=distance)) \n\ng <- ggplot()\ng + train_plot + test_plot\n\n\n#controllare errore\nlg_err<-numeric()\n\nfor(i in 1:100){\n  lg_knn <- knn(finger_train , test_2, finger_train_target , k=i)\n  lg_err <- c(lg_err, mean(lg_knn == test_2$distance))\n  \n}\ndim(finger_train)\ndim(finger_test)\ndim(finger_train_target)\nfor(i in 1:100){\n  lg_knn <- knn(finger_train , finger_test, finger_train_target , k=i)\n  lg_err <- c(lg_err, mean(lg_knn == finger_test$distance))\n  \n}\nplot(1-lg_err,type=\"l\",ylab=\"Error Rate\",\n     xlab=\"K\",main=\"Error Rate for LG With Varying K\")\n\n\n##### k-NN solo RSSI #####\n\nfinger_train_mono <- unordered_finger_set[1:4622, 1]\n#finger_test_mono <- unordered_finger_set[4633:4642,3] li prendo dal mio set\ndim(finger_train_mono)\n#dim(finger_test_mono)\n\ntest_mono <- rssi_lg_rasp1[2500: 2940,4]\ntest_mono\ndim(test_mono)\n\n\nfinger_train_target_mono  <- head(unordered_finger_set$distance, 4622)\n#length(finger_train_target_mono)\n\n#controllare errore\nlg_err_mono<-numeric()\nfor(i in 1:100){\n  lg_knn_mono <- knn(finger_train_mono , test_mono, finger_train_target_mono , k=i)\n  lg_err_mono <- c(lg_err_mono, mean(lg_knn_mono == test_mono$distance))\n  \n}\nplot(1-lg_err_mono,type=\"l\",ylab=\"Error Rate\",\n     xlab=\"K\",main=\"Error Rate for LG only RSSI With Varying K\")\n\n##### k-NN RSSI + RX #####\n#Info iniziali\nLG_FINGERPRINT_CORRIDOIO_RX <- read_csv(\"~/Documents/R_files/RSSIvsRX/data/LG_FINGERPRINT_CORRIDOIO_RX.csv\")\nTAB_FINGERPRINT_CORRIDOIO_RX <- read_csv(\"~/Documents/R_files/RSSIvsRX/data/TAB_FINGERPRINT_CORRIDOIO_RX.csv\")\n\ncolnames(LG_FINGERPRINT_CORRIDOIO_RX)[4] <- \"distance\"\ncolnames(TAB_FINGERPRINT_CORRIDOIO_RX)[4] <- \"distance\"\n\nggplot(data = LG_FINGERPRINT_CORRIDOIO_RX,aes(x = rx,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle(\"LG RSSI/RX distanza\")\nggplot(data = TAB_FINGERPRINT_CORRIDOIO_RX,aes(x = rx,y = rssi, group=distance, color=distance)) + stat_sum() + ggtitle(\"LG RSSI/RX distanza\")\n\n\nbplot_tab_finger <- ggplot(aes(y = rssi, x = factor(distance), color= distance), data = TAB_FINGERPRINT_CORRIDOIO_RX)\nbplot_tab_finger <- bplot_tab_finger + stat_summary(fun.data = min.mean.sd.max, geom = \"boxplot\") + geom_jitter(position=position_jitter(width=.2), size=3)\nbplot_tab_finger <- bplot_tab_finger + ggtitle(\"TAB fingerprint: RSSI media, st dev +/- media\") + xlab(\"Distanza\") + ylab(\"RSSI\")\nbplot_tab_finger\n\nbplot_tab_finger_rx <- ggplot(aes(y = rx, x = factor(distance), color= distance), data = TAB_FINGERPRINT_CORRIDOIO_RX)\nbplot_tab_finger_rx <- bplot_tab_finger_rx + stat_summary(fun.data = min.mean.sd.max, geom = \"boxplot\") + geom_jitter(position=position_jitter(width=.2), size=3)\nbplot_tab_finger_rx <- bplot_tab_finger_rx + ggtitle(\"TAB fingerprint: RSSI media, st dev +/- media\") + xlab(\"Distanza\") + ylab(\"RSSI\")\nbplot_tab_finger_rx\n\n\n#knn rssi/rx samsung\n\nfinger_train_tab <- TAB_FINGERPRINT_CORRIDOIO_RX\nfinger_test_tab <- subset(visual_sam_1, distance == \"02\")\nfinger_test_tab\ndim(finger_test_tab)\ndim(finger_train_tab)\nfinger_train_tab$timestamp=NULL\nfinger_test_tab$timestamp=NULL\n\nfinger_train_target_tab  <- TAB_FINGERPRINT_CORRIDOIO_RX$distance\n\n#plot test + train fusi <- CAMBIARE COLORE DI TEST PLOT\ntrain_plot <-   geom_point(data = finger_train_tab,aes(x = rx,y = rssi, group=distance, color=distance)) \ntest_plot <- stat_sum(data = finger_test_tab,aes(x = rx,y = rssi, colour=distance))\ng <- ggplot()\ng + train_plot + test_plot\n\n\n#controllare errore\ntab_err<-numeric()\n\nfor(i in 1:100){\n  tab_knn <- knn(finger_train_tab , finger_test_tab, finger_train_target_tab , k=i)\n  tab_err <- c(tab_err, mean(tab_knn == finger_test_tab$distance))\n  \n}\nplot(1-tab_err,type=\"l\",ylab=\"Error Rate\",\n     xlab=\"K\",main=\"Error Rate for TAB RSSI/RX With Varying K\")\n\n#In alcuni casi è abbastanza alto\n\n\nunmetro_lg <- subset(LG_FINGERPRINT_CORRIDOIO, LG_FINGERPRINT_CORRIDOIO$distance == \"01\")\nmean(unmetro_lg$rssi)\n",
    "created" : 1499516431022.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2591935668",
    "id" : "D7A5186F",
    "lastKnownWriteTime" : 1504794951,
    "last_content_update" : 1504794951,
    "path" : "~/Documents/R_files/RSSIvsRX/script/lg_fingerprint.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}